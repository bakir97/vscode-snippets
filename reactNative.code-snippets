{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "React Native Redux Form": {
    "prefix": "nativeReduxForm",
    "body": [
      "import React, { Component } from 'react'",
      "import { Container,Content,Item } from 'native-base';",
      "import { StyleSheet } from 'react-native';",
      "import { Field,reduxForm } from 'redux-form';",
      "import { connect } from 'react-redux'",
      " class ${1:example}extends Component {",
      "  render() {",
      "    return (",
      "      <Container>",
      "          <Content>",
      "",
      "          </Content>",
      "      </Container>",
      "    )",
      "  }",
      "}",
      "const styles = StyleSheet.create({",
      "    ",
      "})",
      "const mapStateToProps = (state) => ({",
      "  ",
      "})",
      "",
      "const mapDispatchToProps = {",
      "  ",
      "}",
      "",
      "export default  connect(mapStateToProps,mapDispatchToProps)(reduxForm({form:'${2:example}'})(${1:example}))"
    ],
    "description": "React Native Redux Form"
  }
}
